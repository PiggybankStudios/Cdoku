{
	"folders":
	[
		{
			"path": ".",
			"folder_exclude_patterns": [
				"engine",
				"lib",
				"build/PigSudoku.pdx",
			],
		},
		{
			"name": "PigEngine",
			"path": "engine/platform/playdate",
		},
		{
			"name": "GyLib",
			"path": "lib/include/gylib",
		},
		{
			"path": "F:\\Programs\\PlaydateSDK",
			"folder_exclude_patterns":
			[
				".sentry-native",
				"bin",
				"Designing for Playdate",
				"Disk",
				"Inside Playdate",
				"PlaydateSDK.docset",
				"resources",
				"C_API/buildsupport",
				"CoreLibs/assets",
			],
			"file_exclude_patterns":
			[
				"*.html",
				"*.css",
			],
		},
	],
	"settings":
	{
		"build_options":
		[
		],
		"custom_constants":
		[
			"AppState_Game",
			"AppState_MainMenu",
			"AppState_None",
			"AppState_NumStates",
			"BOARD_HEIGHT",
			"BOARD_MARGIN",
			"BOARD_OUTLINE_THICKNESS",
			"BOARD_WIDTH",
			"CELL_DIVIDER_THICKNESS",
			"CURSOR_INNER_MARGIN",
			"CURSOR_OUTLINE_THICKNESS",
			"CellFlag_Filled",
			"CellFlag_IsGiven",
			"CellFlag_None",
			"CellFlag_NumFlags",
			"FIRST_APP_STATE",
			"GAME_VERSION_BUILD",
			"GAME_VERSION_MAJOR",
			"GAME_VERSION_MINOR",
			"GROUP_DIVIDER_THICKNESS",
			"GROUP_HEIGHT",
			"GROUP_WIDTH",
			"MAIN_FONT_PATH",
			"MIN_CELL_SIZE",
			"MMENU_BTN_FONT_PATH",
			"MMENU_BTN_HORIZONTAL_PADDING",
			"MMENU_BTN_SPACING",
			"MMENU_BTN_VERTICAL_PADDING",
			"MMENU_LEVEL_BTN_FONT_PATH",
			"MMENU_LEVEL_BTN_HORIZONTAL_PADDING",
			"MMENU_LEVEL_BTN_VERTICAL_PADDING",
			"MMENU_TITLE_FONT_PATH",
			"MMenuAction_Back",
			"MMenuAction_Exit",
			"MMenuAction_Level",
			"MMenuAction_None",
			"MMenuAction_NumActions",
			"MMenuAction_Play",
			"MMenuAction_Settings",
			"MMenuSubMenu_LevelSelect",
			"MMenuSubMenu_None",
			"MMenuSubMenu_NumSubMenus",
			"MMenuSubMenu_Options",
			"PLAYDATE_SCREEN_HEIGHT",
			"PLAYDATE_SCREEN_WIDTH",
		],
		"custom_functions":
		[
			"AppState_t InitGame()",
			"BitmapData_t GetBitmapData(LCDBitmap* bitmap, bool sizeOnly = false)",
			"Cell_t* GetCell(Board_t* board, v2i gridPos)",
			"Cell_t* GetSelectedCell(Board_t* board, Cursor_t* cursor)",
			"FilesInDir_t GetFilesInDirectory(MyStr_t path, MemArena_t* memArena, bool includeFolders = false, bool fileNameOnly = false, bool showHidden = false)",
			"Font_t* PdBindFont(Font_t* font)",
			"LCDBitmapDrawMode PdSetDrawMode(LCDBitmapDrawMode drawMode)",
			"MMenuBtn_t* AddButtonMainMenu(MMenuAction_t action, MyStr_t displayText, MyStr_t path = MyStr_Empty_Const)",
			"MyStr_t GetLevelSaveFilePath(MemArena_t* memArena, MyStr_t levelPath)",
			"MyStr_t TakeString(StringBuilder_t* builder, MemArena_t* memArena = nullptr)",
			"MyStr_t ToMyStr(const StringBuilder_t* builder)",
			"SpriteSheet_t LoadSpriteSheet(MyStr_t path, i32 numFramesX)",
			"Texture_t CreateTexture(v2i size, u64 dataSize, const u8* pixelData, const u8* maskData)",
			"Texture_t LoadTexture(MyStr_t path)",
			"bool DoesFileExist(bool fromDataDir, MyStr_t path)",
			"bool ReadEntireFile(bool fromDataDir, MyStr_t path, MyStr_t* contentsOut, MemArena_t* memArena)",
			"bool WriteEntireFile(MyStr_t path, MyStr_t contents)",
			"char* ToStr(StringBuilder_t* builder)",
			"const char* GetAppStateStr(AppState_t enumValue)",
			"const char* GetCellFlagStr(CellFlag_t enumValue)",
			"const char* GetMMenuActionStr(MMenuAction_t enumValue)",
			"const char* GetMMenuSubMenuStr(MMenuSubMenu_t enumValue)",
			"const char* GetPDLanguageStr(PDLanguage language)",
			"const char* GetPDSystemEventStr(PDSystemEvent event)",
			"reci PdAddClipRec(reci rectangle)",
			"reci PdClearClipRec()",
			"reci PdSetClipRec(reci rectangle)",
			"u64 StringBuilderGetNumUnusedBytes(StringBuilder_t* builder, bool includeMemArenaSpace = false, GrowMemToken_t* growTokenOut = nullptr)",
			"v2i GetBitmapSize(LCDBitmap* bitmap)",
			"v2i MeasureText(LCDFont* font, MyStr_t text, i32 tracking = 0)",
			"void BoardLayoutUi(Board_t* board, reci availableRec)",
			"void ClearAppStateStackBeforeClose()",
			"void ClearButtonsMainMenu()",
			"void FreeFilesInDir(FilesInDir_t* files)",
			"void FreeStringBuilder(StringBuilder_t* builder)",
			"void GameUiLayout()",
			"void InitBoard(Board_t* board, MyStr_t initialState)",
			"void InitCursor(Cursor_t* cursor, v2i startingPos, Board_t* board)",
			"void ListFilesCallback(const char* pathNullTerm, void* userdata)",
			"void LoadSaveInfo(Board_t* board, MyStr_t saveInfo)",
			"void MainMenuGotoSubMenu(MMenuSubMenu_t newSubMenu)",
			"void MicroDelay(unsigned int milliseconds)",
			"void NewStringBuilder(StringBuilder_t* builder, MemArena_t* memArena, u64 initialRequiredCapacity = 0)",
			"void PdBeginFrame()",
			"void PdDrawLine(v2i start, v2i end, i32 width, LCDColor color = kColorBlack)",
			"void PdDrawRec(reci drawRec, LCDColor color = kColorBlack)",
			"void PdDrawRecOutline(reci drawRec, i32 thickness, bool outside = false, LCDColor color = kColorBlack)",
			"void PdDrawSheetFrame(SpriteSheet_t sheet, v2i frame, reci drawRec)",
			"void PdDrawSheetFrame(SpriteSheet_t sheet, v2i frame, v2i position)",
			"void PdDrawText(MyStr_t text, v2i position)",
			"void PdDrawTextPrint(v2i position, const char* formatString, ...)",
			"void PdDrawTexturedRec(LCDBitmap* bitmap, v2i bitmapSize, reci drawRec)",
			"void PdDrawTexturedRec(Texture_t texture, reci drawRec)",
			"void PdDrawTexturedRecPart(Texture_t texture, reci drawRec, reci sourceRec)",
			"void PdSetRenderOffset(v2i offset)",
			"void PlaceButtonsListMainMenu()",
			"void PostRenderGame()",
			"void PostUpdateGame()",
			"void PreRenderGame()",
			"void PreUpdateGame()",
			"void RegisterAppState_Game()",
			"void RegisterAppState_MainMenu()",
			"void RenderAppState_MainMenu(bool isOnTop)",
			"void RenderBoard(Board_t* board, Cursor_t* cursor)",
			"void SetCurrentLevel(MyStr_t levelPath)",
			"void StartAppState_Game(bool initialize, AppState_t prevState, MyStr_t transitionStr)",
			"void StartAppState_MainMenu(bool initialize, AppState_t prevState, MyStr_t transitionStr)",
			"void StopAppState_Game(bool deinitialize, AppState_t nextState)",
			"void StopAppState_MainMenu(bool deinitialize, AppState_t nextState)",
			"void StringBuilderAllocMoreMem(StringBuilder_t* builder, u64 spaceRequired)",
			"void StringBuilderAppend(StringBuilder_t* builder, MyStr_t str)",
			"void StringBuilderAppendLine(StringBuilder_t* builder, const char* nullTermStr = \"\")",
			"void StringBuilderAppendPrint(StringBuilder_t* builder, const char* formatString, ...)",
			"void StringBuilderAppendPrintLine(StringBuilder_t* builder, const char* formatString, ...)",
			"void StringBuilderAppendPrintVa(StringBuilder_t* builder, const char* formatString, va_list args1, va_list args2)",
			"void StringBuilderClear(StringBuilder_t* builder, bool deallocate = false)",
			"void StringBuilderPrint(StringBuilder_t* builder, const char* formatString, ...)",
			"void StringBuilderSet(StringBuilder_t* builder, MyStr_t str)",
			"void StringBuilderShrink(StringBuilder_t* builder, bool deallocateIfNoChars = true)",
			"void UpdateAppState_Game()",
			"void UpdateAppState_MainMenu()",
			"void UpdateCursor(Cursor_t* cursor, Board_t* board)",
		],
		"custom_globals":
		[
			"game",
			"gl",
			"mainHeap",
			"mmenu",
		],
		"custom_types":
		[
			"AppState_t",
			"CellFlag_t",
			"Cell_t",
			"Cursor_t",
			"FilesInDirContext_t",
			"FilesInDir_t",
			"GameGlobals_t",
			"GameState_t",
			"MMenuAction_t",
			"MMenuBtn_t",
			"MainMenuState_t",
			"StringBuilder_t",
		],
	},
}
